stages:
  - update-runners
  - deploy
  - update-sertificates

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_BUILDKIT: 1

update-letsencrypt-dns:
  image: tmaier/docker-compose:latest
  stage: deploy
  script:
    # Так как gitlab-runner хранит текущую git-версию в своей папке,
    # а в докер-файле прописан абсолютный путь, необходимо скопировать для него файлы.
    - sudo cp $CI_PROJECT_DIR/production/letsencrypt-dns/domains.conf /srv/letsencrypt-dns/domains.conf
    - docker-compose -f docker-compose.prod.yml pull letsencrypt-dns
    - docker-compose -f docker-compose.prod.yml up -d letsencrypt-dns
  when: manual
  tags:
    - production

update-traefik:
  image: tmaier/docker-compose:latest
  stage: deploy
  script:
    - sudo cp -r $CI_PROJECT_DIR/production/traefik/dynamic-conf.yml /srv/traefik/dynamic-conf.yml
    - sudo cp -r $CI_PROJECT_DIR/production/traefik/traefik.yml /srv/traefik/traefik.yml
    - docker-compose -f docker-compose.prod.yml pull traefik
    - docker-compose -f docker-compose.prod.yml -p prod up -d traefik
  when: manual
  tags:
    - production

# Интересно, даст ли сам себя обновить, хотя команды раннер выполняет из другого контейнера.
.update-runners: &update-runners
  image: tmaier/docker-compose:latest
  stage: update-runners
  when: manual

update-production-runner:
  <<: *update-runners
  script:
    - docker-compose -f docker-compose.prod.yml pull gitlab-runner
    - docker-compose -f docker-compose.prod.yml up -d gitlab-runner
  tags:
    - production

update-staging-runner:
  <<: *update-runners
  script:
    - docker-compose -f docker-compose.services.yml pull gitlab-runner
    - docker-compose -f docker-compose.services.yml up -d gitlab-runner
  tags:
    - staging



